#==========cn2配置==========
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
allow-lan: true
bind-address: '*'
mode: rule
log-level: info
ipv6: true
external-controller: :9090
external-ui: dashboard
secret: "your_password_here"

# 新增: tproxy端口，用于支持透明代理
tproxy-port: 7895

#==========DNS 设置==========
dns:
  enable: true
  ipv6: true
  listen: 0.0.0.0:53
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter:
    - '*.lan'
    - 'localhost.ptlogin2.qq.com'
    - '*.local'  # 防止本地域名泄露
  use-hosts: true
  nameserver:
    - 127.0.0.1:5635  # AdGuard Home
  fallback:
    - tls://1.1.1.1:853
    - tls://8.8.8.8:853
    - https://cloudflare-dns.com/dns-query
    - https://dns.google/dns-query
    # 新增: 国内DNS服务器作为fallback
    - 114.114.114.114
    - 223.5.5.5
  fallback-filter:
    geoip: true
    geoip-code: CN
    ipcidr:
      - 240.0.0.0/4
  default-nameserver:
    - 127.0.0.1:5635  # AdGuard Home
  nameserver-policy:
    'www.google.com': [1.1.1.1, 8.8.8.8]
    '+.github.com': [1.1.1.1, 8.8.8.8]
  cache: true
  cache-size: 4096

#==========代理提供商==========
proxy-providers:
  tudou:
    type: http
    url: "https://tudou-dyapi.tudouyun.top/api/v1/client/subscribe?token=f0d5eda7efd87a99e2e94f8790276706"
    interval: 3600
    path: ./proxies/tudou.yaml
    health-check:
      enable: true
      interval: 600
      url: http://www.gstatic.com/generate_204

#==========代理组==========
proxy-groups:
  - name: Claude
    type: select
    use:
      - tudou

  - name: Auto
    type: url-test
    use:
      - tudou
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    tolerance: 50

  - name: Fallback
    type: fallback
    use:
      - tudou
    url: 'http://www.gstatic.com/generate_204'
    interval: 300

  - name: LoadBalance
    type: load-balance
    use:
      - tudou
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    strategy: consistent-hashing

  - name: Proxy
    type: select
    use:
      - tudou
    proxies:
      - Auto
      - Fallback
      - LoadBalance
      - DIRECT

  - name: Streaming
    type: select
    use:
      - tudou
    proxies:
      - Auto
      - Proxy

  - name: Gaming
    type: url-test
    use:
      - tudou
    url: 'http://www.gstatic.com/generate_204'
    interval: 300
    tolerance: 50

  - name: GlobalMedia
    type: select
    proxies:
      - Proxy
      - Auto
      - DIRECT

  - name: Telegram
    type: select
    proxies:
      - Proxy
      - Auto
      - DIRECT

  - name: Apple
    type: select
    proxies:
      - DIRECT
      - Proxy
      - Auto

  - name: Microsoft
    type: select
    proxies:
      - DIRECT
      - Proxy
      - Auto

  - name: AI_Services
    type: select
    use:
      - tudou
    proxies:
      - Auto
      - Proxy
    filter: '(?i)美国|美國|US|United States'

  # 新增: 为Netflix添加单独的代理组
  - name: Netflix
    type: select
    use:
      - tudou
    proxies:
      - Auto
      - Proxy
      - DIRECT

  # 新增: 为YouTube添加单独的代理组
  - name: YouTube
    type: select
    use:
      - tudou
    proxies:
      - Auto
      - Proxy
      - DIRECT

#==========规则提供商==========
rule-providers:
  reject:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt"
    path: ./ruleset/reject.yaml
    interval: 86400

  icloud:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/icloud.txt"
    path: ./ruleset/icloud.yaml
    interval: 86400

  apple:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/apple.txt"
    path: ./ruleset/apple.yaml
    interval: 86400

  google:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt"
    path: ./ruleset/google.yaml
    interval: 86400

  proxy:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt"
    path: ./ruleset/proxy.yaml
    interval: 86400

  direct:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt"
    path: ./ruleset/direct.yaml
    interval: 86400

  private:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt"
    path: ./ruleset/private.yaml
    interval: 86400

  gfw:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/gfw.txt"
    path: ./ruleset/gfw.yaml
    interval: 86400

  greatfire:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/greatfire.txt"
    path: ./ruleset/greatfire.yaml"
    interval: 86400

  cncidr:
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/cncidr.txt"
    path: ./ruleset/cncidr.yaml
    interval: 86400

  lancidr:
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/lancidr.txt"
    path: ./ruleset/lancidr.yaml
    interval: 86400

  telegramcidr:
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/telegramcidr.txt"
    path: ./ruleset/telegramcidr.yaml
    interval: 86400

  globalmedia:
    type: http
    behavior: classical
    url: "https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Clash/RuleSet/StreamingMedia/Streaming.yaml"
    path: ./ruleset/globalmedia.yaml
    interval: 86400

  microsoft:
    type: http
    behavior: classical
    url: "https://cdn.jsdelivr.net/gh/DivineEngine/Profiles@master/Clash/RuleSet/Extra/Microsoft/Microsoft.yaml"
    path: ./ruleset/microsoft.yaml
    interval: 86400

#==========规则==========
rules:
  # Claude 专用规则
  - DOMAIN-SUFFIX,anthropic.com,Claude
  - DOMAIN-SUFFIX,claude.ai,Claude
  - DOMAIN-KEYWORD,claude,Claude

  - DOMAIN-SUFFIX,openai.com,AI_Services
  - DOMAIN-SUFFIX,ai.com,AI_Services
  - DOMAIN-SUFFIX,anthropic.com,AI_Services
  - DOMAIN-SUFFIX,claude.ai,AI_Services
  - DOMAIN-SUFFIX,perplexity.ai,AI_Services
  - DOMAIN-KEYWORD,openai,AI_Services
  - DOMAIN-KEYWORD,anthropic,AI_Services
  - DOMAIN-KEYWORD,claude,AI_Services
  - DOMAIN-KEYWORD,chatgpt,AI_Services
  - DOMAIN-SUFFIX,webrtc.org,REJECT  # 阻止WebRTC相关流量
  - DOMAIN-SUFFIX,rtc.org,REJECT  # 阻止RTC相关流量
  - DOMAIN-SUFFIX,peerconnection.org,REJECT  # 阻止P2P连接流量
  - RULE-SET,private,DIRECT
  - RULE-SET,reject,REJECT
  - RULE-SET,icloud,DIRECT
  - RULE-SET,apple,Apple
  - RULE-SET,google,Proxy
  - RULE-SET,proxy,Proxy
  - RULE-SET,direct,DIRECT
  - RULE-SET,lancidr,DIRECT
  - RULE-SET,cncidr,DIRECT
  - RULE-SET,telegramcidr,Telegram
  - RULE-SET,gfw,Proxy
  - RULE-SET,greatfire,Proxy
  - RULE-SET,globalmedia,GlobalMedia
  - RULE-SET,microsoft,Microsoft
  # 新增: Netflix和YouTube的规则
  - DOMAIN-KEYWORD,netflix,Netflix
  - DOMAIN-SUFFIX,netflix.com,Netflix
  - DOMAIN-SUFFIX,netflix.net,Netflix
  - DOMAIN-KEYWORD,youtube,YouTube
  - DOMAIN-SUFFIX,youtube.com,YouTube
  - DOMAIN-SUFFIX,googlevideo.com,YouTube
  # 新增: 自定义规则示例
  - DOMAIN-SUFFIX,example.com,DIRECT
  - IP-CIDR,192.168.0.0/16,DIRECT
  - GEOIP,CN,DIRECT
  - MATCH,Proxy

#==========高级功能==========
tun:
  enable: true
  stack: system
  dns-hijack:
    - any:53
    - tcp://any:53
  auto-route: true
  auto-detect-interface: true
  mtu: 9000

profile:
  store-selected: true
  store-fake-ip: true

sniffer:
  enable: true
  sniffing:
    - tls
    - http
  force-domain:
    - '+.google.com'
    - '+.facebook.com'
    - '+.youtube.com'
  skip-domain:
    - 'Mijia Cloud'
    - '+.apple.com'
  port-whitelist:
    - 80
    - 443

experimental:
  interface-name: eth0
  routing-mark: 6666

tcp-concurrent: true

#==========性能优化==========
tcp-fast-open: true
udp: true
quic: true
mptcp: true

experimental:
  network-config:
    tcp:
      congestion-algorithm: bbr
  # 新增: 启用ebpf以提升性能
  ebpf:
    auto-redir: true
    redirect-to-tun:
      - eth0
  # 新增: 支持UDPv6
  uDPv6: true

#==========定时任务==========
cron:
  - '0 8 * * * clash-switch-config-work'
  - '0 18 * * * clash-switch-config-home'

#==========多配置文件支持==========
config-reload: true
configs:
  - config1.yaml
  - config2.yaml

#==========TLS 指纹==========
tls:
  fingerprint: chrome

#==========脚本支持==========
script:
  code: |
    def main(ctx, metadata):
      ip = metadata["dst_ip"]
      port = metadata["dst_port"]
      
      if port == "80" or port == "443":
        if ctx.rule_providers.geoip_cn.match(ip):
          return "DIRECT"
      
      return "Proxy"

# 新增: 更复杂的脚本示例
script:
  code: |
    import time

    def main(ctx, metadata):
      current_hour = time.localtime().tm_hour
      
      if 9 <= current_hour < 18:  # 工作时间
        if metadata["host"].endswith(".work.com"):
          return "DIRECT"
      else:  # 非工作时间
        if metadata["host"].endswith(".entertainment.com"):
          return "Proxy"
      
      return None  # 使用默认规则

#==========预解析域名==========
hosts:
  'mtalk.google.com': 108.177.125.188
  'dl.google.com': 180.163.151.161
  'dl.l.google.com': 180.163.151.161

#==========认证==========
authentication:
  - "user1:pass1"
  - "user2:pass2"

#==========TCP 并发==========
tcp-concurrent: true

#==========多路径 TCP==========
mptcp:
  enabled: true
  scheduler: redundant

#==========自定义出站接口==========
interface-name: eth0

#==========TTL 伪装==========
fake-ip-range: 198.18.0.1/16
fake-ip-filter:
  - '*.lan'
  - 'localhost.ptlogin2.qq.com'

#==========IPV6==========
ipv6: true

#==========UDP 支持==========
udp: true

#==========API 支持==========
external-controller: 0.0.0.0:9090
external-ui: dashboard
secret: "your_dashboard_password_here"

#==========延迟测试==========
url-test:
  url: http://www.gstatic.com/generate_204
  interval: 300

#==========代理缓存==========
profile:
  store-selected: true

#==========流量统计==========
profile:
  tracing: true

#==========DNS 缓存==========
dns:
  enable: true
  cache: true
  cache-size: 4096

#==========节点健康检查==========
health-check:
  enable: true
  interval: 600
  url: http://www.gstatic.com/generate_204

# 新增: 长连接优化
keep-alive-interval: 30

# 新增: redir-host模式下的fake-ip-filter，防止DNS泄露
dns:
  enable: true
  enhanced-mode: redir-host
  fake-ip-filter:
    - '*.lan'
    - 'localhost.ptlogin2.qq.com'
    - '*.local'
    - '*.crashlytics.com'

# 新增: 更细粒度的DNS控制
dns:
  enable: true
  nameserver:
    - 223.5.5.5
    - 119.29.29.29
  fallback:
    - tls://1.1.1.1:853
    - tls://8.8.8.8:853
  fallback-filter:
    geoip: true
    ipcidr:
      - 240.0.0.0/4

# 新增: 更多的安全措施
tls:
  certificate: "path/to/your/cert.pem"  # 如果有自定义证书
  sni: "your-custom-sni.com"  # 自定义SNI
  alpn: 
    - h2
    - http/1.1
  fingerprint: firefox  # 使用Firefox的TLS指纹

# 新增: 自定义出站IP
routing-mark: 66

# 新增: 更多的性能优化
tunnel:
  tcp-keep-alive: 30
  tcp-no-delay: true

# Claude 连接说明：
# 1. 当 Claude 无法正常使用时，请在 Clash 控制面板中找到 "Claude" 代理组。
# 2. 在 "Claude" 组中，您会看到机场提供的所有可用节点列表。
# 3. 手动选择一个节点进行尝试。
# 4. 如果选择的节点无法连接 Claude，请尝试其他节点。
# 5. 持续尝试不同节点，直到找到可以正常使用 Claude 的连接。
# 6. 如果所有节点都无法连接，请检查 Claude 服务状态或稍后再试。

# 新增: 更多使用说明
# 7. 如果遇到特定网站访问问题，可以尝试切换到 "Proxy" 组并选择不同的代理方式。
# 8. 对于流媒体服务，可以使用新增的 "Netflix" 和 "YouTube" 代理组进行更精细的控制。
# 9. 定期检查并更新您的 Clash 配置文件，以获得最佳性能和安全性。
# 10. 如果遇到连接问题，可以尝试切换 DNS 设置或使用 fallback DNS。